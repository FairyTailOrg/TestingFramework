name: Execute test cases.
on:
  workflow_dispatch:
    inputs:
      path:
        description: 'Path or file to be executed. If you want to run all just use /'
        default: '/'
        required: true
      environment:
        default: 'qa'
        description: 'Environment to execute the flow.'
        required: false
      browser:
          default: 'chromium'
          description: 'browser to execute the flow. You can use all to parametrize the 3 browsers.'
          required: false
      marks:
        default: 'smoke'
        description: 'Marks to execute the specific set of test cases.'
        required: false
jobs:
  create-env:
    name: ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
        
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v4
        
      - name: create conda environment.
        uses: conda-incubator/setup-miniconda@v3
        with:
          mamba-version: "*"
          channels: conda-forge,bioconda,defaults
          auto-activate-base: false
          activate-environment: testing-framework
          environment-file: testing_framework.yml

      - name: Export Python Path.
        run: |
            export PYTHONPATH="/usr/share/miniconda/envs/testing-framework:$PYTHONPATH"
            echo $PYTHONPATH
  
      - name: Install Playwright webkit dependencies.
        run: |
            if [ "${{ github.event.inputs.browser }}" == "all" ]; then
              echo "BROWSER=" >> $GITHUB_ENV
            else
              echo  "BROWSER=${{ github.event.inputs.browser }}" >> $GITHUB_ENV
            fi
              playwright install $BROWSER

      - name: Install Playwright webkit dependencies.
        run: |
          if [ "${{ github.event.inputs.browser }}" == "all" || "${{ github.event.inputs.browser }}" == "webkit"]; then
            playwright install-deps webkit
  
      - name: Get env variables from secrets.
        run: |
            mkdir config
  
      - name: Create config_qa.env file
        run: |
          echo "${{ secrets.CONFIG_QA }}" | base64 --decode > config/config_qa.env

      - name: Get env variables from secrets according to your selection
        run: |
          if [ "${{ github.event.inputs.environment }}" == "qa" ]; then
            echo "${{ secrets.CONFIG_QA }}" | base64 --decode > config/config_qa.env
          elif [ "${{ github.event.inputs.environment }}" == "dev" ]; then
            echo "${{ secrets.CONFIG_DEV }}" | base64 --decode > config/config_dev.env
          elif [ "${{ github.event.inputs.environment }}" == "prd" ]; then
            echo "${{ secrets.CONFIG_PRD }}" | base64 --decode > config/config_prd.env
          else
            echo "${{ secrets.CONFIG_QA }}" | base64 --decode > config/config_qa.env
          fi
        
      - name: Execute Smoke Tests.
        run: |
          pytest -v tests${{ github.event.inputs.path }} --headless -m ${{ github.event.inputs.marks }} --env=${{ github.event.inputs.environment }}  --browser=${{ github.event.inputs.browser }}
        continue-on-error: false
      
      - name: Remove the config file.
        run: |  
          rm -f config/config_${{ github.event.inputs.environment }}.env

      - name: Save artifacts.
        uses: actions/upload-artifact@v4
        with:
          name: tests-results
          path: results